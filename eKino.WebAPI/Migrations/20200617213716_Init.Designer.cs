// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eKino.WebAPI.Database;

namespace eKino.WebAPI.Migrations
{
    [DbContext(typeof(eKinoContext))]
    [Migration("20200617213716_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("eKino.WebAPI.Database.Drzave", b =>
                {
                    b.Property<int>("DrzavaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DrzavaID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("DrzavaId");

                    b.ToTable("Drzave");
                });

            modelBuilder.Entity("eKino.WebAPI.Database.Filmovi", b =>
                {
                    b.Property<int>("FilmId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("FilmID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumSnimanja")
                        .HasColumnType("datetime");

                    b.Property<int>("DrzavaId")
                        .HasColumnName("DrzavaID")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<byte[]>("Slika")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("SlikaThumb")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("Trajanje")
                        .HasColumnType("int");

                    b.HasKey("FilmId");

                    b.HasIndex("DrzavaId");

                    b.ToTable("Filmovi");
                });

            modelBuilder.Entity("eKino.WebAPI.Database.FilmoviFilmskeLicnosti", b =>
                {
                    b.Property<int>("FilmFilmskaLicnostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("FilmFilmskaLicnostID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FilmId")
                        .HasColumnName("FilmID")
                        .HasColumnType("int");

                    b.Property<int>("FilmskaLicnostId")
                        .HasColumnName("FilmskaLicnostID")
                        .HasColumnType("int");

                    b.Property<int>("FilmskaUlogaId")
                        .HasColumnName("FilmskaUlogaID")
                        .HasColumnType("int");

                    b.HasKey("FilmFilmskaLicnostId");

                    b.HasIndex("FilmId");

                    b.HasIndex("FilmskaLicnostId");

                    b.HasIndex("FilmskaUlogaId");

                    b.ToTable("FilmoviFilmskeLicnosti");
                });

            modelBuilder.Entity("eKino.WebAPI.Database.FilmoviZanrovi", b =>
                {
                    b.Property<int>("FilmZanrId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("FilmZanrID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FilmId")
                        .HasColumnName("FilmID")
                        .HasColumnType("int");

                    b.Property<int>("ZanrId")
                        .HasColumnName("ZanrID")
                        .HasColumnType("int");

                    b.HasKey("FilmZanrId");

                    b.HasIndex("FilmId");

                    b.HasIndex("ZanrId");

                    b.ToTable("FilmoviZanrovi");
                });

            modelBuilder.Entity("eKino.WebAPI.Database.FilmskeLicnosti", b =>
                {
                    b.Property<int>("FilmskaLicnostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("FilmskaLicnostID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumRodjenja")
                        .HasColumnType("datetime");

                    b.Property<int>("DrzavaId")
                        .HasColumnType("int");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<byte[]>("Slika")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("SlikaThumb")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("FilmskaLicnostId");

                    b.HasIndex("DrzavaId");

                    b.ToTable("FilmskeLicnosti");
                });

            modelBuilder.Entity("eKino.WebAPI.Database.FilmskeUloge", b =>
                {
                    b.Property<int>("FilmskaUlogaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("FilmskaUlogaID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("FilmskaUlogaId");

                    b.ToTable("FilmskeUloge");
                });

            modelBuilder.Entity("eKino.WebAPI.Database.Gledaoci", b =>
                {
                    b.Property<int>("GledalacId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("GledalacID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumRodjenja")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("KorisnickoIme")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("LozinkaHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("LozinkaSalt")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("GledalacId");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasName("UQ_Email")
                        .HasFilter("[Email] IS NOT NULL");

                    b.HasIndex("KorisnickoIme")
                        .IsUnique()
                        .HasName("UQ_G_KorisnickoIme");

                    b.ToTable("Gledaoci");
                });

            modelBuilder.Entity("eKino.WebAPI.Database.Korisnici", b =>
                {
                    b.Property<int>("KorisnikId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("KorisnikID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DatumRodjenja")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("KorisnickoIme")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("LozinkaHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("LozinkaSalt")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Telefon")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("KorisnikId");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasName("UQ_K_Email")
                        .HasFilter("[Email] IS NOT NULL");

                    b.HasIndex("KorisnickoIme")
                        .IsUnique()
                        .HasName("UQ_KorisnickoIme");

                    b.ToTable("Korisnici");
                });

            modelBuilder.Entity("eKino.WebAPI.Database.KorisnickeUloge", b =>
                {
                    b.Property<int>("KorisnikUlogaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("KorisnikUlogaID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DatumIzmjene")
                        .HasColumnType("datetime");

                    b.Property<int>("KorisnikId")
                        .HasColumnName("KorisnikID")
                        .HasColumnType("int");

                    b.Property<int>("UlogaId")
                        .HasColumnName("UlogaID")
                        .HasColumnType("int");

                    b.HasKey("KorisnikUlogaId");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("UlogaId");

                    b.ToTable("KorisnickeUloge");
                });

            modelBuilder.Entity("eKino.WebAPI.Database.Notifikacije", b =>
                {
                    b.Property<int>("NotifikacijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("NotifikacijaID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumSlanja")
                        .HasColumnType("datetime");

                    b.Property<int>("GledalacId")
                        .HasColumnName("GledalacID")
                        .HasColumnType("int");

                    b.Property<string>("Naslov")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("NovostId")
                        .HasColumnName("NovostID")
                        .HasColumnType("int");

                    b.Property<bool>("Procitana")
                        .HasColumnType("bit");

                    b.HasKey("NotifikacijaId");

                    b.HasIndex("GledalacId");

                    b.HasIndex("NovostId");

                    b.ToTable("Notifikacije");
                });

            modelBuilder.Entity("eKino.WebAPI.Database.Novosti", b =>
                {
                    b.Property<int>("NovostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("NovostID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumObjave")
                        .HasColumnType("datetime");

                    b.Property<int>("KorisnikId")
                        .HasColumnName("KorisnikID")
                        .HasColumnType("int");

                    b.Property<string>("Naslov")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Sadrzaj")
                        .IsRequired()
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.HasKey("NovostId");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Novosti");
                });

            modelBuilder.Entity("eKino.WebAPI.Database.Ocjene", b =>
                {
                    b.Property<int>("OcjenaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("OcjenaID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumOcjenjivanja")
                        .HasColumnType("datetime");

                    b.Property<int>("FilmId")
                        .HasColumnName("FilmID")
                        .HasColumnType("int");

                    b.Property<int>("GledalacId")
                        .HasColumnName("GledalacID")
                        .HasColumnType("int");

                    b.Property<int>("Ocjena")
                        .HasColumnType("int");

                    b.HasKey("OcjenaId");

                    b.HasIndex("FilmId");

                    b.HasIndex("GledalacId");

                    b.ToTable("Ocjene");
                });

            modelBuilder.Entity("eKino.WebAPI.Database.Pretplate", b =>
                {
                    b.Property<int>("PretplataId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PretplataID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DatumPretplate")
                        .HasColumnType("datetime");

                    b.Property<int>("GledalacId")
                        .HasColumnName("GledalacID")
                        .HasColumnType("int");

                    b.Property<bool>("Otkazana")
                        .HasColumnType("bit");

                    b.Property<int>("ZanrId")
                        .HasColumnName("ZanrID")
                        .HasColumnType("int");

                    b.HasKey("PretplataId");

                    b.HasIndex("GledalacId");

                    b.HasIndex("ZanrId");

                    b.ToTable("Pretplate");
                });

            modelBuilder.Entity("eKino.WebAPI.Database.Projekcije", b =>
                {
                    b.Property<int>("ProjekcijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ProjekcijaID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Cijena")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<DateTime>("DatumVrijemeOdrzavanja")
                        .HasColumnType("datetime");

                    b.Property<int>("FilmId")
                        .HasColumnName("FilmID")
                        .HasColumnType("int");

                    b.Property<int>("SalaId")
                        .HasColumnName("SalaID")
                        .HasColumnType("int");

                    b.Property<int>("VrstaProjekcijeId")
                        .HasColumnType("int");

                    b.HasKey("ProjekcijaId");

                    b.HasIndex("FilmId");

                    b.HasIndex("SalaId");

                    b.HasIndex("VrstaProjekcijeId");

                    b.ToTable("Projekcije");
                });

            modelBuilder.Entity("eKino.WebAPI.Database.Rezervacije", b =>
                {
                    b.Property<int>("RezervacijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RezervacijaID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrojKarata")
                        .HasColumnType("int");

                    b.Property<decimal>("Cijena")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<DateTime>("DatumRezervacije")
                        .HasColumnType("datetime");

                    b.Property<int?>("GledalacId")
                        .HasColumnName("GledalacID")
                        .HasColumnType("int");

                    b.Property<int>("ProjekcijaId")
                        .HasColumnName("ProjekcijaID")
                        .HasColumnType("int");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.HasKey("RezervacijaId");

                    b.HasIndex("GledalacId");

                    b.HasIndex("ProjekcijaId");

                    b.ToTable("Rezervacije");
                });

            modelBuilder.Entity("eKino.WebAPI.Database.Sale", b =>
                {
                    b.Property<int>("SalaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SalaID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrojSjedista")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<byte[]>("Slika")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("SlikaThumb")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("SalaId");

                    b.ToTable("Sale");
                });

            modelBuilder.Entity("eKino.WebAPI.Database.Sjedista", b =>
                {
                    b.Property<int>("SjedisteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SjedisteID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Kolona")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Red")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<int>("SalaId")
                        .HasColumnName("SalaID")
                        .HasColumnType("int");

                    b.Property<bool?>("Zauzeto")
                        .HasColumnType("bit");

                    b.HasKey("SjedisteId");

                    b.HasIndex("SalaId");

                    b.ToTable("Sjedista");
                });

            modelBuilder.Entity("eKino.WebAPI.Database.Ulaznice", b =>
                {
                    b.Property<int>("UlaznicaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Cijena")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<int?>("GledalacId")
                        .HasColumnType("int");

                    b.Property<int>("ProjekcijaId")
                        .HasColumnType("int");

                    b.Property<byte[]>("Qrcode")
                        .IsRequired()
                        .HasColumnName("QRcode")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("RezervacijaId")
                        .HasColumnType("int");

                    b.Property<int>("SjedisteId")
                        .HasColumnType("int");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.HasKey("UlaznicaId");

                    b.HasIndex("ProjekcijaId");

                    b.HasIndex("RezervacijaId");

                    b.HasIndex("SjedisteId");

                    b.ToTable("Ulaznice");
                });

            modelBuilder.Entity("eKino.WebAPI.Database.Uloge", b =>
                {
                    b.Property<int>("UlogaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UlogaID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("UlogaId");

                    b.ToTable("Uloge");
                });

            modelBuilder.Entity("eKino.WebAPI.Database.VrsteProjekcije", b =>
                {
                    b.Property<int>("VrstaProjekcijeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.HasKey("VrstaProjekcijeId");

                    b.ToTable("VrsteProjekcije");
                });

            modelBuilder.Entity("eKino.WebAPI.Database.Zanrovi", b =>
                {
                    b.Property<int>("ZanrId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ZanrID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("ZanrId");

                    b.ToTable("Zanrovi");
                });

            modelBuilder.Entity("eKino.WebAPI.Database.Filmovi", b =>
                {
                    b.HasOne("eKino.WebAPI.Database.Drzave", "Drzava")
                        .WithMany("Filmovi")
                        .HasForeignKey("DrzavaId")
                        .HasConstraintName("FK_Filmovi_Drzave")
                        .IsRequired();
                });

            modelBuilder.Entity("eKino.WebAPI.Database.FilmoviFilmskeLicnosti", b =>
                {
                    b.HasOne("eKino.WebAPI.Database.Filmovi", "Film")
                        .WithMany("FilmoviFilmskeLicnosti")
                        .HasForeignKey("FilmId")
                        .HasConstraintName("FK_FilmoviFilmskeLicnosti_Filmovi")
                        .IsRequired();

                    b.HasOne("eKino.WebAPI.Database.FilmskeLicnosti", "FilmskaLicnost")
                        .WithMany("FilmoviFilmskeLicnosti")
                        .HasForeignKey("FilmskaLicnostId")
                        .HasConstraintName("FK_FilmoviFilmskeLicnosti_FilmskeLicnosti")
                        .IsRequired();

                    b.HasOne("eKino.WebAPI.Database.FilmskeUloge", "FilmskaUloga")
                        .WithMany("FilmoviFilmskeLicnosti")
                        .HasForeignKey("FilmskaUlogaId")
                        .HasConstraintName("FK_FilmoviFilmskeLicnosti_FilmskeUloge")
                        .IsRequired();
                });

            modelBuilder.Entity("eKino.WebAPI.Database.FilmoviZanrovi", b =>
                {
                    b.HasOne("eKino.WebAPI.Database.Filmovi", "Film")
                        .WithMany("FilmoviZanrovi")
                        .HasForeignKey("FilmId")
                        .HasConstraintName("FK_FilmoviZanrovi_Filmovi")
                        .IsRequired();

                    b.HasOne("eKino.WebAPI.Database.Zanrovi", "Zanr")
                        .WithMany("FilmoviZanrovi")
                        .HasForeignKey("ZanrId")
                        .HasConstraintName("FK_FilmoviZanrovi_Zanrovi")
                        .IsRequired();
                });

            modelBuilder.Entity("eKino.WebAPI.Database.FilmskeLicnosti", b =>
                {
                    b.HasOne("eKino.WebAPI.Database.Drzave", "Drzava")
                        .WithMany("FilmskeLicnosti")
                        .HasForeignKey("DrzavaId")
                        .HasConstraintName("FK_FilmskeLicnosti_Drzave")
                        .IsRequired();
                });

            modelBuilder.Entity("eKino.WebAPI.Database.KorisnickeUloge", b =>
                {
                    b.HasOne("eKino.WebAPI.Database.Korisnici", "Korisnik")
                        .WithMany("KorisnickeUloge")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK_KorisnickeUloge_Korisnici")
                        .IsRequired();

                    b.HasOne("eKino.WebAPI.Database.Uloge", "Uloga")
                        .WithMany("KorisnickeUloge")
                        .HasForeignKey("UlogaId")
                        .HasConstraintName("FK_KorisnickeUloge_Uloge")
                        .IsRequired();
                });

            modelBuilder.Entity("eKino.WebAPI.Database.Notifikacije", b =>
                {
                    b.HasOne("eKino.WebAPI.Database.Gledaoci", "Gledalac")
                        .WithMany("Notifikacije")
                        .HasForeignKey("GledalacId")
                        .HasConstraintName("FK_Notifikacije_Gledaoci")
                        .IsRequired();

                    b.HasOne("eKino.WebAPI.Database.Novosti", "Novost")
                        .WithMany("Notifikacije")
                        .HasForeignKey("NovostId")
                        .HasConstraintName("FK_Notifikacije_Novosti");
                });

            modelBuilder.Entity("eKino.WebAPI.Database.Novosti", b =>
                {
                    b.HasOne("eKino.WebAPI.Database.Korisnici", "Korisnik")
                        .WithMany("Novosti")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK_Novosti_Korisnici")
                        .IsRequired();
                });

            modelBuilder.Entity("eKino.WebAPI.Database.Ocjene", b =>
                {
                    b.HasOne("eKino.WebAPI.Database.Filmovi", "Film")
                        .WithMany("Ocjene")
                        .HasForeignKey("FilmId")
                        .HasConstraintName("FK_Ocjene_Gledaoci")
                        .IsRequired();

                    b.HasOne("eKino.WebAPI.Database.Gledaoci", "Gledalac")
                        .WithMany("Ocjene")
                        .HasForeignKey("GledalacId")
                        .HasConstraintName("FK_Ocjene_Gledaoc")
                        .IsRequired();
                });

            modelBuilder.Entity("eKino.WebAPI.Database.Pretplate", b =>
                {
                    b.HasOne("eKino.WebAPI.Database.Gledaoci", "Gledalac")
                        .WithMany("Pretplate")
                        .HasForeignKey("GledalacId")
                        .HasConstraintName("FK_Pretplate_Gledaoci")
                        .IsRequired();

                    b.HasOne("eKino.WebAPI.Database.Zanrovi", "Zanr")
                        .WithMany("Pretplate")
                        .HasForeignKey("ZanrId")
                        .HasConstraintName("FK_Pretplate_Zanrovi")
                        .IsRequired();
                });

            modelBuilder.Entity("eKino.WebAPI.Database.Projekcije", b =>
                {
                    b.HasOne("eKino.WebAPI.Database.Filmovi", "Film")
                        .WithMany("Projekcije")
                        .HasForeignKey("FilmId")
                        .HasConstraintName("FK_Projekcije_Filmovi")
                        .IsRequired();

                    b.HasOne("eKino.WebAPI.Database.Sale", "Sala")
                        .WithMany("Projekcije")
                        .HasForeignKey("SalaId")
                        .HasConstraintName("FK_Projekcije_Sale")
                        .IsRequired();

                    b.HasOne("eKino.WebAPI.Database.VrsteProjekcije", "VrstaProjekcije")
                        .WithMany("Projekcije")
                        .HasForeignKey("VrstaProjekcijeId")
                        .HasConstraintName("FK_Projekcije_VrsteProjekcije")
                        .IsRequired();
                });

            modelBuilder.Entity("eKino.WebAPI.Database.Rezervacije", b =>
                {
                    b.HasOne("eKino.WebAPI.Database.Gledaoci", "Gledalac")
                        .WithMany("Rezervacije")
                        .HasForeignKey("GledalacId")
                        .HasConstraintName("FK_Rezervacije_Gledaoci");

                    b.HasOne("eKino.WebAPI.Database.Projekcije", "Projekcija")
                        .WithMany("Rezervacije")
                        .HasForeignKey("ProjekcijaId")
                        .HasConstraintName("FK_Rezervacije_Projekcije")
                        .IsRequired();
                });

            modelBuilder.Entity("eKino.WebAPI.Database.Sjedista", b =>
                {
                    b.HasOne("eKino.WebAPI.Database.Sale", "Sala")
                        .WithMany("Sjedista")
                        .HasForeignKey("SalaId")
                        .HasConstraintName("FK_Sjedista_Sale")
                        .IsRequired();
                });

            modelBuilder.Entity("eKino.WebAPI.Database.Ulaznice", b =>
                {
                    b.HasOne("eKino.WebAPI.Database.Projekcije", "Projekcija")
                        .WithMany("Ulaznice")
                        .HasForeignKey("ProjekcijaId")
                        .HasConstraintName("FK_Ulaznice_Projekcije")
                        .IsRequired();

                    b.HasOne("eKino.WebAPI.Database.Rezervacije", "Rezervacija")
                        .WithMany("Ulaznice")
                        .HasForeignKey("RezervacijaId")
                        .HasConstraintName("FK_Ulaznice_Rezervacije");

                    b.HasOne("eKino.WebAPI.Database.Sjedista", "Sjediste")
                        .WithMany("Ulaznice")
                        .HasForeignKey("SjedisteId")
                        .HasConstraintName("FK_Ulaznice_Sjedista")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
